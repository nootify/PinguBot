version: "3.8"

services:
  bot:
    build: .
    container_name: pingubot
    command:
      - scripts/start.sh
    depends_on:
      audio:
        condition: service_started
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL
      - LAVALINK_HOST
      - LAVALINK_PORT
      - LAVALINK_PASSWORD
      - PINGU_TOKEN
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    image: pingubot:latest
    networks:
      - bot-network
    restart: unless-stopped
    user: pingu:pingu

  audio:
    # build:
    #   context: ./lavalink
    #   args:
    #     - LAVALINK_PORT
    #     - LAVALINK_PASSWORD
    container_name: pingulink
    environment:
      - SERVER_PORT=${LAVALINK_PORT}
      - LAVALINK_SERVER_PASSWORD=${LAVALINK_PASSWORD}
    # image: pingulink:latest
    image: fredboat/lavalink:latest
    networks:
      - bot-network
    restart: unless-stopped
    volumes:
      - ./lavalink/application.yml:/opt/Lavalink/application.yml:ro
    # healthcheck:
    #   test: ['CMD-SHELL', 'curl localhost:${SERVER_PORT}']
    #   interval: 5s
    #   timeout: 5s
    #   retries: 10

  db:
    # build: ./db
    container_name: pingudb
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    image: postgres:14
    # ports:
    #   - "5432:5432"
    networks:
      - bot-network
    restart: always
    user: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

networks:
  bot-network:
    name: pingubot-network

volumes:
  postgres-data:
    name: pingubot-data
